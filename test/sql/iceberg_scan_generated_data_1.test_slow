# name: test/sql/iceberg_scan_generated_data_1.test_slow
# description: test iceberg extension with the sf1 generated test set
# group: [iceberg]

require parquet

require iceberg

require-env DUCKDB_ICEBERG_HAVE_TEST_DATA

# Check count matches
query I
SELECT count(*) FROM ICEBERG_SCAN('data/iceberg/generated_1/pyspark_iceberg_table');
----
<FILE>:data/iceberg/generated_1/expected_results/last/count.csv

# Check data is identical, sorting by uuid to guarantee unique order.
query I nosort q1
SELECT COUNT(*) FROM ICEBERG_SCAN('data/iceberg/generated_1/pyspark_iceberg_table');
----

query I nosort q1
SELECT COUNT(*) FROM PARQUET_SCAN('data/iceberg/generated_1/expected_results/q08/data/*.parquet');
----

query I nosort q2
SELECT COUNT(*), MIN(l_suppkey_long), MAX(l_suppkey_long), SUM(l_suppkey_long) FROM ICEBERG_SCAN('data/iceberg/generated_1/pyspark_iceberg_table');
----

query I nosort q2
SELECT COUNT(*), MIN(l_suppkey_long), MAX(l_suppkey_long), SUM(l_suppkey_long) FROM PARQUET_SCAN('data/iceberg/generated_1/expected_results/last/data/*.parquet');
----

# Full table compare: very slow
query I nosort q3
SELECT * FROM ICEBERG_SCAN('data/iceberg/generated_1/pyspark_iceberg_table') WHERE uuid NOT NULL ORDER BY uuid;
----

query I nosort q3
SELECT * FROM PARQUET_SCAN('data/iceberg/generated_1/expected_results/q08/data/*.parquet')  WHERE uuid NOT NULL ORDER BY uuid;
----